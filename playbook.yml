- hosts: localhost
  vars:
    gnome_user: "{{ ansible_user_id }}"
    gnome_extensions:
      - id: 1262 # bing wallpaper changer
        enable: yes
  roles:
    - role: gantsign.inotify
      inotify_max_user_watches: 524288
    - role: petermosmans.customize-gnome
    - role: gantsign.sdkman
      sdkman_users:
        - "{{ ansible_user_id }}"
    - role: gantsign.sdkman_init
      users:
        - username: "{{ ansible_user_id }}"
          sdkman_install:
            - candidate: java
              version: '11.0.11.hs-adpt'
            - candidate: java
              version: '17.0.3-tem'
          sdkman_default:
            java: '17.0.3-tem'
    - role: morgangraphics.ansible_role_nvm
      default: true
      nodejs_version: "14.18.2"
      nvm_profile: "/home/{{ ansible_user_id }}/.zshrc"
    - role: robertdebock.npm
      become: true
    - role: andrewrothstein.starship
      become: true
  tasks:
    - name: file limits
      community.general.pam_limits:
        domain: "{{ ansible_user_id }}"
        limit_type: soft
        limit_item: nofile
        value: '64000'
      become: true
    - name: Update and upgrade apt packages
      become: true
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 #One day
    - name: Install all packages
      ansible.builtin.package:
        name:
          - network-manager-openvpn
          - docker.io
          - heif-gdk-pixbuf
          - curl
          - direnv
          - powertop
          - powerstat
          - s-tui
          - build-essential
          - fzf
          - keepassxc
          - rcm
          - zsh
          - thunderbird
          - vim
          - maven
          - zeal
          - tldr
          - timewarrior
          - taskwarrior
          - gopass
          - golang
          - vdirsyncer
          - khal
          - gnupg2
          - git
          - rng-tools
          - libfuse2
        state: latest
      become: true
    - name: google-chrome
      apt:
        deb: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      become: true
    - name: dropbox
      apt:
        deb: https://linux.dropbox.com/packages/ubuntu/dropbox_2020.03.04_amd64.deb
      become: true
    - name: vscode
      apt:
        deb: https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64
      become: true
    - name: webex
      apt:
        deb: https://binaries.webex.com/WebexDesktop-Ubuntu-Official-Package/Webex.deb
      become: true
    - name: mattermost
      apt:
        deb: https://releases.mattermost.com/desktop/5.0.2/mattermost-desktop-5.0.2-linux-amd64.deb
      become: true
    - name: zoom
      apt:
        deb: https://cdn.zoom.us/prod/5.9.1.1380/zoom_amd64.deb
      become: true
    - name: slack
      apt:
        deb: https://downloads.slack-edge.com/releases/linux/4.23.0/prod/x64/slack-desktop-4.23.0-amd64.deb
      become: true
    - name: npm yarn
      npm:
        name: yarn
        global: yes
      become: true
    - name: npm vue clie-service
      npm:
        name: '@vue/cli-service'
        global: yes
      become: true
    - name: Check if Jetbrains Toolbox is already installed
      stat:
        path: ~/.local/share/JetBrains/Toolbox/bin/jetbrains-toolbox
      register: is_toolbox_installed
    - name: Jetbrains Toolbox
      ansible.builtin.shell: |
        wget -cO jetbrains-toolbox.tar.gz "https://data.services.jetbrains.com/products/download?platform=linux&code=TBA"
        tar -xzf jetbrains-toolbox.tar.gz
        DIR=$(find . -maxdepth 1 -type d -name jetbrains-toolbox-\* -print | head -n1)
        cd $DIR
        ./jetbrains-toolbox
        cd ..
        rm -r $DIR
        rm jetbrains-toolbox.tar.gz
      delegate_to: localhost
      when: not is_toolbox_installed.stat.exists
    - name: Check if Homebrew is already installed
      stat:
        path: /home/linuxbrew/.linuxbrew/bin/brew
      register: is_brew_installed
    - name: Install Homebrew
      ansible.builtin.shell: |
        yes | /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        eval $(/opt/homebrew/bin/brew shellenv)
        echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.zshrc
      when: not is_brew_installed.stat.exists
    - name: brew
      community.general.homebrew:
        name:
          - terraform
          - saml2aws
          - awscli
          - k9s
          - helm
          - kubectl
          - kubectx
          - docker-compose
        path: /home/linuxbrew/.linuxbrew/bin/
      when: is_brew_installed
    - name: Tap To Click
      dconf:
        key: /org/gnome/desktop/peripherals/touchpad/tap-to-click
        value: "true"
        state: present
      tags: "dconf"
    - name: Window Layout
      dconf:
        key: "/org/gnome/desktop/wm/preferences/button-layout"
        value: >
          ":minimize,maximize,close"
        state: present
      tags: "dconf"
    - name: Middle paste
      dconf:
        key: /org/gnome/desktop/interface/gtk-enable-primary-paste
        value: "false"
        state: present
      tags: "dconf"
    - name: Hinting
      dconf:
        key: /org/gnome/desktop/interface/font-hinting
        value: "'full'"
        state: present
      tags: "dconf"
    - name: Antialias
      dconf:
        key: /org/gnome/desktop/interface/font-antialiasing
        value: "'rgba'"
        state: present
      tags: "dconf"
    - name: Disable Hot Corners
      dconf:
        key: /org/gnome/desktop/interface/enable-hot-corners
        value: "false"
        state: present
      tags: "dconf"
    - name: Show Battery percentage
      dconf:
        key: /org/gnome/desktop/interface/show-battery-percentage
        value: "true"
        state: present
      tags: "dconf"
    - name: Clock-Show-Weekday
      dconf:
        key: /org/gnome/desktop/interface/clock-show-weekday
        value: "true"
        state: present
    - name: Show-Weekdate
      dconf:
        key: /org/gnome/desktop/calendar/show-weekdate
        value: "true"
        state: present
    - name: Clock-Show-Seconds
      dconf:
        key: /org/gnome/desktop/interface/clock-show-seconds
        value: "true"
        state: present
    - name: docker daemon
      service:
        name: docker
        state: started
        enabled: yes
      become: true
    - name: change to zsh
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        shell: /bin/zsh
        groups: "docker"
        append: true
      become: true
    - name: ensure .zshrc exists
      copy:
        content: ""
        dest: ~/.zshrc
        force: no
        owner: "{{ ansible_user_id }}"
        mode: 0700
    - name: Update zsh for starship
      lineinfile:
        dest: ~/.zshrc
        regexp: 'eval "$(starship init zsh)"'
        line: 'eval "$(starship init zsh)"'
        create: yes
